AUFGABE 5.1
------------------------------------
SELECT
d.DEPARTMENT_ID,
d.DEPARTMENT_NAME,
MIN(e.SALARY) AS MIN_SALARY,
MAX(e.SALARY) AS MAX_SALARY,
AVG(e.SALARY) AS AVG_SALARY
FROM 
DEPARTMENTS d
INNER JOIN EMPLOYEES e ON d.DEPARTMENT_ID = e.DEPARTMENT_ID
GROUP BY 
d.DEPARTMENT_ID, d.DEPARTMENT_NAME
;
AUFGABE 5.2
------------------------------------
SELECT
d.DEPARTMENT_ID,
d.DEPARTMENT_NAME,
MIN(e.SALARY) AS MIN_SALARY,
MAX(e.SALARY) AS MAX_SALARY,
AVG(e.SALARY) AS AVG_SALARY
FROM 
DEPARTMENTS d
INNER JOIN EMPLOYEES e ON d.DEPARTMENT_ID = e.DEPARTMENT_ID
WHERE d.DEPARTMENT_NAME LIKE '______ %' 
GROUP BY 
d.DEPARTMENT_ID, d.DEPARTMENT_NAME
;
AUFGABE 5.3
------------------------------------
SELECT 
d.EMPLOYEE_ID,
d.LAST_NAME,
COUNT(j.EMPLOYEE_ID) AS ANZCHANGES
FROM EMPLOYEES d 
FULL OUTER JOIN JOB_HISTORY j ON d.EMPLOYEE_ID = j.EMPLOYEE_ID
GROUP BY d.EMPLOYEE_ID, d.LAST_NAME
ORDER BY  ANZCHANGES DESC  ,d.EMPLOYEE_ID ASC 
;
AUFGABE 5.4
------------------------------------
SELECT 
e.FIRST_NAME,
e.LAST_NAME
FROM EMPLOYEES e
INNER JOIN EMPLOYEES m ON e.MANAGER_ID = m.EMPLOYEE_ID
WHERE SUBSTR(e.FIRST_NAME,1, 1) LIKE SUBSTR(m.FIRST_NAME,1, 1) 
;
AUFGABE 5.5
------------------------------------
SELECT d.department_id, d.department_name,
CASE
	WHEN COUNT(e.employee_id) = 0 THEN 'unbesetzt'
    WHEN COUNT(e.employee_id) <= 5 THEN 'klein'
    WHEN COUNT(e.employee_id) <= 10 THEN 'mittel'
	ELSE 'gross'
END AS Kategorie
;
FROM EMPLOYEES e
FULL OUTER JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
WHERE d.department_id IS NOT NULL
GROUP BY d.department_id, d.department_name
ORDER BY Kategorie ASC
;
AUFGABE 5.6
------------------------------------
SELECT d.department_id, d.department_name
FROM EMPLOYEES e
INNER JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
GROUP BY d.department_id, d.department_name
HAVING COUNT(e.employee_id) > 0
;
AUFGABE 5.7
------------------------------------
SELECT d.DEPARTMENT_NAME
FROM DEPARTMENTS d LEFT OUTER JOIN EMPLOYEES e ON d.department_id = e.department_id 
GROUP BY  d.DEPARTMENT_NAME
HAVING COUNT(e.employee_id) = 0
;
AUFGABE 5.8
------------------------------------
SELECT  
SUBSTR(JOB_ID,0 ,2 ) AS BEREICH,
MIN(MIN_SALARY) AS MIN,
MAX(MAX_SALARY) AS MAX
FROM JOBS
GROUP BY SUBSTR(JOB_ID,0 ,2 )
;
AUFGABE 5.9
------------------------------------
SELECT d.DEPARTMENT_ID, d.DEPARTMENT_NAME,
AVG(e.salary) AS AVG,
MIN(e.salary) AS MIN,
MAX(e.salary) AS MAX
FROM DEPARTMENTS d INNER JOIN EMPLOYEES e ON d.department_id = e.department_id
GROUP BY d.DEPARTMENT_ID, d.DEPARTMENT_NAME
HAVING  MIN(e.salary) = MAX(e.salary)
ORDER BY d.DEPARTMENT_ID ASC
;
AUFGABE 5.10
------------------------------------
UPDATE EMPLOYEES
SET COMMISSION_PCT =
(CASE 
	WHEN COMMISSION_PCT IS NULL THEN 0.1
	WHEN COMMISSION_PCT = 0.1 THEN 0.12
	WHEN COMMISSION_PCT = 0.15 THEN 0.18
	ELSE COMMISSION_PCT
END)
;
SELECT * FROM EMPLOYEES
WHERE COMMISSION_PCT < 0.2
;